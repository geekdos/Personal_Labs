/*
#	Java Les fondamentaux
#	A. Tasso
#	Deviner un nombre tiré au hasard
#	Fichier  : Aleatoire.java
*/

package Introduction;

import javax.swing.BorderFactory;
import javax.swing.border.Border;
// La classe Saisie hérite des comportements d'une JFrame
public class Aleatoire extends javax.swing.JFrame {

    public Aleatoire() {
        // Afficher les composants créés en mode Design
        initComponents();
        // Initialiser les données du jeu (score, valeur tirée au hasard, fil d'arianne, ...
        initJeu();  
    }
    // Initilisation des données
    private void initJeu() {
     // Calculer une valeur tirée au hasard entre 0 et 50
     int debut = (int) (Math.random()*50);
     // Calculer une valeur tirée au hasard entre debut et debut+100
     valeurEntiere = auHasardEntre(debut, debut+100);
     
     // ------ Le panel "Je choisi ..."
     // Afficher l'intervalle de choix de valeurs à deviner dans le cadre du Panel, en titre
     Border cadre = BorderFactory.createTitledBorder(" Je choisi un nombre entre "+ debut +" et " + (debut+100)  + ", à vous de deviner ...   ");
     TitrePnl.setBorder(cadre);
     // Le bouton OK est cliquable dès le début
     okBtn.setEnabled(true);
     valeurSaisieTf.setText("");


     // ------- Le panel "Rejouer"
     // Gestion du groupe de boutons pour rejouer ou non
     // Par défaut le choix du groupe de bouton est oui, choix vaut true
     grpBtn.add(nonRbt);
     grpBtn.add(ouiRbt);
     ouiRbt.setSelected(true);
     choix=true;
     // Le bouton Valider n'est pas cliquable au début d'une partie
     validerBtn.setEnabled(false);
     // L'option rejouer n'est pas valide au début d'une partie
     rejouer=false;


     // -------- Le Panel "Score"
     // Initialisation et affichage du score
     score=10;
     scoreLbl.setText(Integer.toString(score));

     // ------- Le Panel "Pour infos"
     cptr=0;
     filDariane="";
     resultatTfd.setText("");
    } // Fin de initJeu()

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpBtn = new javax.swing.ButtonGroup();
        TitrePnl = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        valeurSaisieTf = new javax.swing.JTextField();
        InfoPnl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultatTfd = new javax.swing.JTextArea();
        scorePnl = new javax.swing.JPanel();
        scoreLbl = new javax.swing.JLabel();
        rejouerPnl = new javax.swing.JPanel();
        ouiRbt = new javax.swing.JRadioButton();
        nonRbt = new javax.swing.JRadioButton();
        validerBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TitrePnl.setBorder(javax.swing.BorderFactory.createTitledBorder("  Je choisi un nombre, à vous de deviner ... "));

        okBtn.setText("OK");
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        valeurSaisieTf.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        valeurSaisieTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valeurSaisieTfKeyReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout TitrePnlLayout = new org.jdesktop.layout.GroupLayout(TitrePnl);
        TitrePnl.setLayout(TitrePnlLayout);
        TitrePnlLayout.setHorizontalGroup(
            TitrePnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(TitrePnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(valeurSaisieTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 275, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(63, 63, 63)
                .add(okBtn)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        TitrePnlLayout.setVerticalGroup(
            TitrePnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(TitrePnlLayout.createSequentialGroup()
                .add(22, 22, 22)
                .add(TitrePnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(valeurSaisieTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(okBtn))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        InfoPnl.setBorder(javax.swing.BorderFactory.createTitledBorder("  Pour Infos  "));

        resultatTfd.setColumns(20);
        resultatTfd.setRows(5);
        jScrollPane1.setViewportView(resultatTfd);

        org.jdesktop.layout.GroupLayout InfoPnlLayout = new org.jdesktop.layout.GroupLayout(InfoPnl);
        InfoPnl.setLayout(InfoPnlLayout);
        InfoPnlLayout.setHorizontalGroup(
            InfoPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(InfoPnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addContainerGap())
        );
        InfoPnlLayout.setVerticalGroup(
            InfoPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(InfoPnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                .addContainerGap())
        );

        scorePnl.setBorder(javax.swing.BorderFactory.createTitledBorder("  Score  "));

        scoreLbl.setBackground(new java.awt.Color(255, 255, 255));
        scoreLbl.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        scoreLbl.setForeground(new java.awt.Color(100, 100, 100));
        scoreLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreLbl.setText("10");
        scoreLbl.setOpaque(true);

        org.jdesktop.layout.GroupLayout scorePnlLayout = new org.jdesktop.layout.GroupLayout(scorePnl);
        scorePnl.setLayout(scorePnlLayout);
        scorePnlLayout.setHorizontalGroup(
            scorePnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(scorePnlLayout.createSequentialGroup()
                .add(28, 28, 28)
                .add(scoreLbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        scorePnlLayout.setVerticalGroup(
            scorePnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, scorePnlLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .add(scoreLbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        rejouerPnl.setBorder(javax.swing.BorderFactory.createTitledBorder("  Rejouer ?  "));

        ouiRbt.setText("Oui");
        ouiRbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ouiRbtActionPerformed(evt);
            }
        });

        nonRbt.setText("Non");
        nonRbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonRbtActionPerformed(evt);
            }
        });

        validerBtn.setText("Valider");
        validerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerBtnActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout rejouerPnlLayout = new org.jdesktop.layout.GroupLayout(rejouerPnl);
        rejouerPnl.setLayout(rejouerPnlLayout);
        rejouerPnlLayout.setHorizontalGroup(
            rejouerPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(rejouerPnlLayout.createSequentialGroup()
                .add(104, 104, 104)
                .add(rejouerPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(rejouerPnlLayout.createSequentialGroup()
                        .add(ouiRbt)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 209, Short.MAX_VALUE)
                        .add(validerBtn)
                        .add(68, 68, 68))
                    .add(rejouerPnlLayout.createSequentialGroup()
                        .add(nonRbt)
                        .addContainerGap(360, Short.MAX_VALUE))))
        );
        rejouerPnlLayout.setVerticalGroup(
            rejouerPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(rejouerPnlLayout.createSequentialGroup()
                .add(rejouerPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(rejouerPnlLayout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(ouiRbt)
                        .add(18, 18, 18)
                        .add(nonRbt))
                    .add(rejouerPnlLayout.createSequentialGroup()
                        .add(27, 27, 27)
                        .add(validerBtn)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(rejouerPnl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, TitrePnl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(InfoPnl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(scorePnl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(TitrePnl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(scorePnl, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(InfoPnl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(rejouerPnl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Calculer une valeur tirée au hasard entre min et max
    private int auHasardEntre (int min, int max){
        int resultat = (int) ((max - min) * Math.random() + min);
        return resultat;
    }

    // Quand on clique sur le bouton OK
    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        // Afficher les valeurs saisie
        jouer();
    }//GEN-LAST:event_okBtnActionPerformed
    // Quand on appuie sur une touche du clavier
    private void valeurSaisieTfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valeurSaisieTfKeyReleased
        // Si on est en cours de partie (la partie est finie quand rejouer vaut true)
        if(!rejouer) {
            // Si la touche du clavier est la touche Entrée
            if(evt.getKeyCode() == 10){
                // Afficher les valeurs saisie, le fil d'Arianne ...
                 jouer();
            }
        }
    }//GEN-LAST:event_valeurSaisieTfKeyReleased
    // Si le bouton ouiRbt est sélectionné
    private void ouiRbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ouiRbtActionPerformed
        // Le drapeau choix vaut true
        choix = true;
    }//GEN-LAST:event_ouiRbtActionPerformed
    // Si le bouton nonRbt est sélectionné
    private void nonRbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonRbtActionPerformed
        // Le drapeau choix vaut false
        choix = false;
    }//GEN-LAST:event_nonRbtActionPerformed

    private void validerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerBtnActionPerformed
        // Si le drapeau choix est vrai
        if (choix) {
            // Lancer une nouvelle partie
            initJeu();
        } 
        else { // Si le drapeau choix est faux
            // quitter l'application
            System.exit(0);
        }
    }//GEN-LAST:event_validerBtnActionPerformed

    // Gestion de l'affichage des valeurs et du compteur
    private void jouer(){
        // Traduire la valeur saisie en entier
        int valeurSaisie = Integer.parseInt(valeurSaisieTf.getText());

        // 1 : Effacer le contenu du de champs de saisie
        valeurSaisieTf.setText("");
        // concaténer le fil d'arianne avec les valeurs saisies au fur et à mesure
        filDariane = filDariane + valeurSaisie + ">";
        // 2 : Passer à la ligne au bout de 4 valeurs saisies
        cptr++;
        if(cptr > 4){
            filDariane += "\n";
            cptr = 0;
        }
        // décrémenter et afficher le compteur à chaque valeur saisie
        score--;
        scoreLbl.setText(Integer.toString(score));
        // Si le score est négatif, proposer une nouvelle partie en modifiant les états des boutons OK et Valider
        if(score <=0){
             validerBtn.setEnabled(true);
             okBtn.setEnabled(false);
             rejouer=true;
        }
    
        // Si la valeur saisie est celle tirée au hasard
        if(valeurSaisie == valeurEntiere){
          // Afficher un message de félicitations et proposer une nouvelle partie
          resultatTfd.setText("Gagné !!!");
          validerBtn.setEnabled(true);
          okBtn.setEnabled(false);
          rejouer=true;
        }
        else { // Si ce n'est pas la bonne valeur, afficher une aide ainsi que la liste des valeurs déjà saisies
               if( valeurSaisie < valeurEntiere){
                 resultatTfd.setText( "Trop petit ! " + filDariane );
            }
            else {
                   resultatTfd.setText("Trop grand !"+ filDariane  );
            }

        }
    }

    /**
      * Fonction main appelée au lancement de l'application
      * Rend visible la fenêtre au sein de laquelle sont placés les composants créés en mode Design
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Aleatoire().setVisible(true);
            }
        });
    }

    // variables globales utilisées par l'application
    private int valeurEntiere ;
    private int score=10;
    private int cptr=0;
    private String filDariane="";
    private boolean choix=true;
    private boolean rejouer=false;
    // Déclaration de variables créées par NetBeans par l'intermédiaire du mode Design
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InfoPnl;
    private javax.swing.JPanel TitrePnl;
    private javax.swing.ButtonGroup grpBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton nonRbt;
    private javax.swing.JButton okBtn;
    private javax.swing.JRadioButton ouiRbt;
    private javax.swing.JPanel rejouerPnl;
    private javax.swing.JTextArea resultatTfd;
    private javax.swing.JLabel scoreLbl;
    private javax.swing.JPanel scorePnl;
    private javax.swing.JTextField valeurSaisieTf;
    private javax.swing.JButton validerBtn;
    // End of variables declaration//GEN-END:variables

}
